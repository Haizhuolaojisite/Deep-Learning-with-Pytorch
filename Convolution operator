OOP Way

Let's kick off this chapter by using convolution operator from the torch.nn package. 
You are going to create a random tensor which will represent your image and random filters to convolve the image with. 
Then you'll apply those images.

The torch library and the torch.nn package have already been imported for you.

import torch
import torch.nn

# Create 10 random images of shape (1, 28, 28)
images = torch.rand(10, 1, 28, 28)

# Build 6 conv. filters of size (3, 3) with stride set to 1 and padding set to 1.
conv_filters = torch.nn.Conv2d(in_channels=1, out_channels=6, kernel_size==3,stride=1, padding = 1)

# Convolve the image with the filters 
output_feature = conv_filters(images)

print(output_feature.shape)

<script.py> output:
    torch.Size([10, 6, 28, 28])
=========================================================================

Functional way

import torch
import torch.nn.functional as F
# Create 10 random images
image = torch.rand(10, 1,28, 28)

# Create 6 filters
filters = torch.rand(6, 1, 3, 3)

# Convolve the image with the filters
output_feature = F.conv2d(image, filters, stride=1, padding=1)
print(output_feature.shape)


<script.py> output:
    torch.Size([10, 6, 28, 28])
